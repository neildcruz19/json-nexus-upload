apply plugin: 'maven'

group='com.example.json'
version='1.0'


task packagejson (dependsOn : 'clean') << {

	description 'Read the release.txt file and package the json files in the build/package directory'

	def i = 0

	println '\n===== Begin - packaging JSON configuration =====\n\n'

	if(folder == null) {
		throw new Exception('Please pass folder name as argument. e.g. -Pfolder={folder name}')
	}

	//Get the folder name from the command line parameters
	println 'Folder : ' + folder

	if(!file(folder).exists()) {
		throw new Exception('Folder : ' + folder + ' does not exist. Please check the name and try again')
	}

	//Read the release file contents from the folder
	String fileContents = new File(folder + '/release.txt').text
	println '-- Release File Content --\n' + fileContents


	//Copy files to temporary build folder to work on the files
	println '\n-- Moving files to build folder --'
	def jobnames = fileContents.split('\n')

	if(jobnames != null && jobnames.length != 0) {
		if(jobnames[0].equals('')) {
			println '\n No job configurations to package in release!'
		} else {
			println 'Number of jobs : ' + jobnames.length

			jobnames.each {
				job ->
				def filename = folder + '/' + job + '.json'
				println '\nProcessing file : ' + filename

				//Copy to build/package folder
				copy {
					from  filename
					into 'build/package'
				}
			}
		}
	} else {
		println '\n No job configurations to package in release!'
	}

	println '\n\n===== End - packaging JSON configuration ====='
}
	
task zipjsonconfig(type: Zip, dependsOn : 'packagejson') {
	println "Test Param : ${testparam}"
	println 'Build Number :' + build_number
	from 'build/package'
    destinationDir file('./build/libs')
    archiveName  "json-metadata-${version}.${build_number}.zip"
}

artifacts {
	archives zipjsonconfig
}


uploadArchives {
    repositories {
       mavenDeployer {
            repository(url: "http://localhost:8081/nexus/repository/json-repo") {
            	 authentication(userName: "admin", password: "admin123")
			}
			pom.version = project.version + "." +build_number
       		pom.artifactId = "json-metadata"
       		pom.groupId = "com.json.nexus"
       }
    }
}